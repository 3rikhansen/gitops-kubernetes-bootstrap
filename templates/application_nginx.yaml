apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: nginx
  namespace: argocd
spec:
  destination:
    namespace: nginx-ingress
    server: https://kubernetes.default.svc
  project: default
  source:
    chart: nginx-ingress
    helm:
      parameters:
      - name: controller.kind
        value: daemonset
    repoURL: https://helm.nginx.com/stable
    targetRevision: 0.14.0
  syncPolicy:
    syncOptions:
    - CreateNamespace=true
---
{{- if .Values.domain }}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-grafana
  namespace: observability
  annotations:
    kubernetes.io/ingress.class: "nginx" 
    cert-manager.io/issuer: "letsencrypt-ci"
spec:
  tls:
  - hosts:
    - grafana.{{ .Values.domain }}
    secretName: nginx-grafana-tls
  rules:
  - host: grafana.{{ .Values.domain }}
    http:
      paths:
      - path: /
        backend:
          serviceName: observability-grafana
          servicePort: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-argocd
  namespace: argocd
  annotations:
    kubernetes.io/ingress.class: "nginx" 
    cert-manager.io/issuer: "letsencrypt-ci"
spec:
  tls:
  - hosts:
    - argocd.{{ .Values.domain }}
    secretName: nginx-argocd-tls
  rules:
  - host: argocd.{{ .Values.domain }}
    http:
      paths:
      - path: /
        backend:
          serviceName: argocd-server
          servicePort: 80
{{- end }}